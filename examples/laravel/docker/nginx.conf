worker_processes 1;
pid /run/nginx.pid;

events {
    worker_connections  1024;
    multi_accept on;
    use epoll;
}

worker_rlimit_nofile 65000;

http {
    server_names_hash_bucket_size 64;

    include /etc/nginx/mime.types;
    access_log off;
    server_tokens off;
    sendfile        on;
    tcp_nopush     on;
    keepalive_timeout  20;
    tcp_nodelay on;

    reset_timedout_connection on;
    client_body_timeout 20;
    client_max_body_size 30M;
    client_header_buffer_size 10K;
    client_header_timeout 32;

    open_file_cache max=200000 inactive=20s;
    open_file_cache_valid 30s;
    open_file_cache_min_uses 2;
    open_file_cache_errors on;

    gzip on;
    gzip_disable "MSIE [1-6]\.";
    gzip_min_length 256;
    gzip_proxied any;
    gzip_comp_level 4;
    gzip_types text/plain text/css application/json application/x-javascript text/xml application/xml application/xml+rss text/javascript;


    proxy_cache_path /tmp/cache keys_zone=cache:10m levels=1:2 inactive=10m max_size=200m; # default cache params

    server {
        listen 8080 default_server;


        # redirect from http to https based on X-Forwarded-Proto header. You can disable or customize it
        if ($http_x_forwarded_proto = "http") {
            return 301 https://$host$request_uri;
        }


        location / {
            proxy_http_version 1.1; # Always upgrade to HTTP/1.1
            proxy_set_header Connection ""; # Enable keepalives
            proxy_set_header Accept-Encoding ""; # Optimize encoding
            proxy_cache_valid 200 302 1m;
            proxy_cache_valid any 1m;
            add_header X-Cache-Status $upstream_cache_status;
            proxy_set_header X-Forwarded-Host $http_host;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header Host $http_host;
            proxy_cache cache;
            proxy_cache_use_stale error timeout http_500 http_502 http_503 http_504;
            proxy_pass http://api;
        }
    }

    upstream api {
        keepalive 20; # Keepalive pool to upstream
        server localhost:8000;
    }

    server {
        listen 8000 default_server;
        root /var/www/html/public;
        index index.html index.htm index.php;
        fastcgi_hide_header X-Powered-By;
        charset utf-8;

        add_header 'Vary' 'Authorization, timediff, Accept-Language' always;

        location / {
            try_files $uri $uri/ /index.php$is_args$args;
        }

        location = /favicon.ico {
            access_log off;
            log_not_found off;
        }

        location = /robots.txt  {
            access_log off;
            log_not_found off;
        }

        error_page 404 /index.php;

        location ~ \.css {
            add_header  Content-Type    text/css;
        }

        location ~ \.js {
            add_header  Content-Type    application/x-javascript;
        }

        location ~ \.php$ {
            try_files $uri =404;
            fastcgi_split_path_info ^(.+\.php)(/.+)$;
            fastcgi_pass  127.0.0.1:9000;
            fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
            fastcgi_param SCRIPT_NAME $fastcgi_script_name;
            fastcgi_index index.php;
            include fastcgi_params;
        }

        location /status {
            allow 127.0.0.1;
            fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
            fastcgi_index index.php;
            include fastcgi_params;
            fastcgi_pass 127.0.0.1:9000;
        }

        location ~ /\.(?!well-known).* {
            deny all;
        }
    }
}
